package com.netcracker.shaw.at_shaw_sd.jdbc;

import org.apache.log4j.Logger;

import com.netcracker.shaw.at_shaw_sd.pageobject.DnRFlowPage;

public class SQLQuery {
	
	Logger log = Logger.getLogger(SQLQuery.class);
	
	public String getDeleteScript() {
		return "begin\r\n" + 
				"pkg_parallel_delete.clear_table;\r\n" + 
				"insert into nc_parallel_delete\r\n" + 
				"    select object_id from nc_objects where level > 1\r\n" + 
				"    start with object_id in (\r\n" + 
				"    select object_id from nc_objects where object_class_id = 3061830882013808530 /* Network Element */ and project_id =9142773846513312527 /* SHAW Inventory Project */    )\r\n" + 
				"    connect by parent_id = prior object_id\r\n" + 
				"                union\r\n" + 
				"                select object_id from nc_objects where object_class_id in (8, 301 /* Device */ ) and project_id=9142773846513312527 /* SHAW Inventory Project */\r\n" + 
				"                union\r\n" + 
				"                select object_id from nc_objects where object_type_id = 9130272113513839964 /* VLAN */ and project_id=9142773846513312527 /* SHAW Inventory Project */\r\n" + 
				"    union\r\n" + 
				"    select object_id from nc_objects where object_type_id in (9130317683513853208 /* VSI */,9130316003513850334 /* RD */, 9130316003513850342 /* RD Range */,9130316003513850343 /* RT */,9130316003513850356 /* RT Range */, 9130306613513844903 /* Metro Ethernet Network */) and project_id=9142773846513312527 /* SHAW Inventory Project */\r\n" + 
				"                ;\r\n" + 
				"commit;\r\n" + 
				"pkg_parallel_delete.delete_prepared_set(p_parallel_level => 8);\r\n" + 
				"end;";
	}
	
	public String getDeleteScriptIPV4() {
		return "begin\r\n" + 
				"pkg_parallel_delete.clear_table;\r\n" + 
				"insert into nc_parallel_delete\r\n" + 
				"   select object_id from nc_objects\r\n" + 
				"    start with object_id in (select object_id from nc_objects where object_type_id in (14001 /* IP Range */, 14003 /* Private IP Range */) and name <> '0.0.0.0/0' and parent_id=9142773846513312534 /* Top Ranges */)\r\n" + 
				"    connect by prior object_id = parent_id;\r\n" + 
				"\r\n" + 
				"commit;\r\n" + 
				"pkg_parallel_delete.delete_prepared_set(p_parallel_level => 8);\r\n" + 
				"end;";
	}
	
	public String getDeleteScriptFDB() {
		return "begin\r\n" + 
				"  pkg_parallel_delete.clear_table;\r\n" + 
				"\r\n" + 
				"  insert into nc_parallel_delete\r\n" + 
				"    select object_id\r\n" + 
				"      from nc_objects\r\n" + 
				"     where object_type_id = 9130272113513839964\r\n" + 
				"       and project_id = 9142773846513312527\r\n" + 
				"    union\r\n" + 
				"    select object_id\r\n" + 
				"      from nc_objects\r\n" + 
				"     start with object_id in\r\n" + 
				"                (select o.object_id\r\n" + 
				"                   from nc_objects o, nc_params p\r\n" + 
				"                  where o.object_id = p.object_id\r\n" + 
				"                    and p.attr_id = 8081349159013831211\r\n" + 
				"                    and p.value = 'INT_IPV6'\r\n" + 
				"                    and o.project_id = 9142773846513312527\r\n" + 
				"                    and o.object_type_id in\r\n" + 
				"                        (1102872989013434274 /* Country */,\r\n" + 
				"                         1102872989013434273 /* Region */,\r\n" + 
				"                         2052264380013018361 /* County/State */,\r\n" + 
				"                         2111346142013240436 /* City/Municipality */,\r\n" + 
				"                         1780440 /* Building */,\r\n" + 
				"                         4031057675013811254 /* HUB Site */,\r\n" + 
				"                         7121158695013985788 /* Provider Location */,\r\n" + 
				"                         9144990807213517666 /* Head End */,\r\n" + 
				"                         4063055943013004400 /* Customer Location */,\r\n" + 
				"                         2091353054013993289 /* Customer Account */,\r\n" + 
				"                         9143004076513284794 /* HFC Fiber Node */,\r\n" + 
				"                         9143332671113421897 /* Splitter */))\r\n" + 
				"    connect by parent_id = prior object_id;\r\n" + 
				"  commit;\r\n" + 
				"  pkg_parallel_delete.delete_prepared_set(p_parallel_level => 8);\r\n" + 
				"end;";
	}
	
	public String getSDBTablesData(String isCount, String deviceName) {
		
		if (isCount.equalsIgnoreCase("Yes") )
		{
			return "SELECT COUNT(1) NUM_OF_SDB_TABLES FROM USER_TABLES WHERE TABLE_NAME LIKE '" + deviceName + "%'";
		}
		else
		{
			return "SELECT TABLE_NAME FROM USER_TABLES WHERE TABLE_NAME LIKE '" + deviceName + "%'";
		}
	}
	
	public String getIDBTablesData(String isCount, String deviceName) {
		
		if (isCount.equalsIgnoreCase("Yes") )
		{
			return "SELECT COUNT(1) NUM_OF_IDB_TABLES FROM USER_TABLES WHERE TABLE_NAME LIKE '" + deviceName + "_%'";
		}
		else
		{
			return "SELECT TABLE_NAME FROM USER_TABLES WHERE TABLE_NAME LIKE '" + deviceName + "_%'";
		}
		
	}
	
	
	public String getSDBQuery(String deviceName) {

		switch (deviceName) {

		case "IPBB" : 

			return 	"SELECT 'SDB_IPBB_IF_STATUS' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_IPBB_IF_STATUS UNION all\r\n" + 
			"SELECT 'SDB_IPBB_PVM' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_IPBB_PVM UNION all\r\n" + 
			"SELECT 'SDB_IPBB_DEVICE_VERSION' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_IPBB_DEVICE_VERSION UNION all\r\n" + 
			"SELECT 'SDB_IPBB_VRF_IF' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_IPBB_VRF_IF UNION all\r\n" + 
			"SELECT 'SDB_IPBB_OSPF_AREA' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_IPBB_OSPF_AREA UNION all\r\n" + 
			"SELECT 'SDB_IPBB_VRF' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_IPBB_VRF UNION all\r\n" + 
			"SELECT 'SDB_IPBB_INNER_VLAN' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_IPBB_INNER_VLAN UNION all\r\n" + 
			"SELECT 'SDB_IPBB_STATIC_ROUTE' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_IPBB_STATIC_ROUTE UNION all\r\n" + 
			"SELECT 'SDB_IPBB_NX_SFP' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_IPBB_NX_SFP UNION all\r\n" + 
			"SELECT 'SDB_IPBB_VRF_RT' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_IPBB_VRF_RT UNION all\r\n" + 
			"SELECT 'SDB_IPBB_DEVICE' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_IPBB_DEVICE UNION all\r\n" + 
			"SELECT 'SDB_IPBB_INTERFACE' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_IPBB_INTERFACE UNION all\r\n" + 
			"SELECT 'SDB_IPBB_OSPF_PROCESS' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_IPBB_OSPF_PROCESS UNION all\r\n" + 
			"SELECT 'SDB_IPBB_INTERFACE_IPV6' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_IPBB_INTERFACE_IPV6 UNION all\r\n" + 
			"SELECT 'SDB_IPBB_CARD' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_IPBB_CARD UNION all\r\n" + 
			"SELECT 'SDB_IPBB_BGP_NEIGHBOR' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_IPBB_BGP_NEIGHBOR UNION all\r\n" + 
			"SELECT 'SDB_IPBB_OSPF_AREA_TYPE' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_IPBB_OSPF_AREA_TYPE UNION all\r\n" + 
			"SELECT 'SDB_IPBB_SVLAN' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_IPBB_SVLAN UNION all\r\n" + 
			"SELECT 'SDB_IPBB_POLICY_MAP' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_IPBB_POLICY_MAP UNION all\r\n" + 
			"SELECT 'SDB_IPBB_VLAN' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_IPBB_VLAN UNION all\r\n" + 
			"SELECT 'SDB_IPBB_BGP_PG' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_IPBB_BGP_PG";


		case "Alcatel" : 

			return "SELECT 'SDB_5620_ACCESS_INGRESS' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_ACCESS_INGRESS UNION ALL \r\n" + 
			"SELECT 'SDB_5620_ADMIN_GROUP' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_ADMIN_GROUP UNION ALL \r\n" + 
			"SELECT 'SDB_5620_AUTO_SYS' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_AUTO_SYS UNION ALL \r\n" + 
			"SELECT 'SDB_5620_BACK_IP' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_BACK_IP UNION ALL \r\n" + 
			"SELECT 'SDB_5620_BGP_PEER' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_BGP_PEER UNION ALL \r\n" + 
			"SELECT 'SDB_5620_BGP_PEER_GROUP' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_BGP_PEER_GROUP UNION ALL \r\n" + 
			"SELECT 'SDB_5620_BUNDLE_IMA' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_BUNDLE_IMA UNION ALL \r\n" + 
			"SELECT 'SDB_5620_CARD' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_CARD UNION ALL \r\n" + 
			"SELECT 'SDB_5620_DAUGHTER_CARD' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_DAUGHTER_CARD UNION ALL \r\n" + 
			"SELECT 'SDB_5620_DAUGHTER_SLOT' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_DAUGHTER_SLOT UNION ALL \r\n" + 
			"SELECT 'SDB_5620_DISC_PH_LINK' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_DISC_PH_LINK UNION ALL \r\n" + 
			"SELECT 'SDB_5620_EPIPE' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_EPIPE UNION ALL \r\n" + 
			"SELECT 'SDB_5620_FDB_NODE' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_FDB_NODE UNION ALL \r\n" + 
			"SELECT 'SDB_5620_LAG' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_LAG UNION ALL \r\n" + 
			"SELECT 'SDB_5620_LAG_LACP' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_LAG_LACP UNION ALL \r\n" + 
			"SELECT 'SDB_5620_LAG_PORT' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_LAG_PORT UNION ALL \r\n" + 
			"SELECT 'SDB_5620_LSP_HOP' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_LSP_HOP UNION ALL \r\n" + 
			"SELECT 'SDB_5620_LSP_PATH' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_LSP_PATH UNION ALL \r\n" + 
			"SELECT 'SDB_5620_MEDIA_ADAPTOR' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_MEDIA_ADAPTOR UNION ALL \r\n" + 
			"SELECT 'SDB_5620_MPLS_INTF' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_MPLS_INTF UNION ALL \r\n" + 
			"SELECT 'SDB_5620_MPLS_INTF_SRLG_PTR' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_MPLS_INTF_SRLG_PTR UNION ALL \r\n" + 
			"SELECT 'SDB_5620_MPLS_IPRANGE' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_MPLS_IPRANGE UNION ALL \r\n" + 
			"SELECT 'SDB_5620_NE' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_NE UNION ALL \r\n" + 
			"SELECT 'SDB_5620_OSPF_AREA' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_OSPF_AREA UNION ALL \r\n" + 
			"SELECT 'SDB_5620_OSPF_INTERFACE' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_OSPF_INTERFACE UNION ALL \r\n" + 
			"SELECT 'SDB_5620_OSPF_NEIGHBOR' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_OSPF_NEIGHBOR UNION ALL \r\n" + 
			"SELECT 'SDB_5620_OSPF_SITE' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_OSPF_SITE UNION ALL \r\n" + 
			"SELECT 'SDB_5620_PORT' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_PORT UNION ALL \r\n" + 
			"SELECT 'SDB_5620_SDP' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_SDP UNION ALL \r\n" + 
			"SELECT 'SDB_5620_SHELF' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_SHELF UNION ALL \r\n" + 
			"SELECT 'SDB_5620_SLOT' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_SLOT UNION ALL \r\n" + 
			"SELECT 'SDB_5620_SPOKE_CONNECTOR' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_SPOKE_CONNECTOR UNION ALL \r\n" + 
			"SELECT 'SDB_5620_SRLG' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_SRLG UNION ALL \r\n" + 
			"SELECT 'SDB_5620_STATIC_ROUTE' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_STATIC_ROUTE UNION ALL \r\n" + 
			"SELECT 'SDB_5620_SUBSCRIBER' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_SUBSCRIBER UNION ALL \r\n" + 
			"SELECT 'SDB_5620_SW_MEDIA_ADAPTOR' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_SW_MEDIA_ADAPTOR UNION ALL \r\n" + 
			"SELECT 'SDB_5620_SW_PORT' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_SW_PORT UNION ALL \r\n" + 
			"SELECT 'SDB_5620_THIRD_SLOT' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_THIRD_SLOT UNION ALL \r\n" + 
			"SELECT 'SDB_5620_TR_CONNECTION' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_TR_CONNECTION UNION ALL \r\n" + 
			"SELECT 'SDB_5620_TUNNEL' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_TUNNEL UNION ALL \r\n" + 
			"SELECT 'SDB_5620_VIRT_INTF' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_VIRT_INTF UNION ALL \r\n" + 
			"SELECT 'SDB_5620_VLAN' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_VLAN UNION ALL \r\n" + 
			"SELECT 'SDB_5620_VLAN_L2_INTF' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_VLAN_L2_INTF UNION ALL \r\n" + 
			"SELECT 'SDB_5620_VLAN_SITE' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_VLAN_SITE UNION ALL \r\n" + 
			"SELECT 'SDB_5620_VLL_EP' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_VLL_EP UNION ALL \r\n" + 
			"SELECT 'SDB_5620_VLL_L2_INTF' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_VLL_L2_INTF UNION ALL \r\n" + 
			"SELECT 'SDB_5620_VLL_PE_PE' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_VLL_PE_PE UNION ALL \r\n" + 
			"SELECT 'SDB_5620_VPLS' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_VPLS UNION ALL \r\n" + 
			"SELECT 'SDB_5620_VPLS_L2_INTF' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_VPLS_L2_INTF UNION ALL \r\n" + 
			"SELECT 'SDB_5620_VPLS_SITE' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_VPLS_SITE UNION ALL \r\n" + 
			"SELECT 'SDB_5620_VPRN' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_VPRN UNION ALL \r\n" + 
			"SELECT 'SDB_5620_VPRN_L3_INTF' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_VPRN_L3_INTF UNION ALL \r\n" + 
			"SELECT 'SDB_5620_VPRN_L3_SRVC_SITE' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_VPRN_L3_SRVC_SITE UNION ALL \r\n" + 
			"SELECT 'SDB_5620_VPRN_ROUTING_INST' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_VPRN_ROUTING_INST UNION ALL \r\n" + 
			"SELECT 'SDB_5620_VPRN_SITE' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_VPRN_SITE UNION ALL \r\n" + 
			"SELECT 'SDB_5620_VRRP_INST' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_VRRP_INST UNION ALL \r\n" + 
			"SELECT 'SDB_5620_VR_IP_ADDRESS' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_VR_IP_ADDRESS UNION ALL \r\n" + 
			"SELECT 'SDB_5620_LSP_TUNNEL' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_LSP_TUNNEL UNION ALL \r\n" + 
			"SELECT 'SDB_5620_BGP_SITE' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_BGP_SITE UNION ALL \r\n" + 
			"SELECT 'SDB_5620_ETH_PORT_SPECS' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_5620_ETH_PORT_SPECS";

		case "Spectrum" : 
			
			return  "SELECT 'SDB_SPECTRUM_DEVICE_DNS' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_SPECTRUM_DEVICE_DNS UNION ALL \r\n" + 
			"SELECT 'SDB_SPECTR_IP_RANGE_VALUES' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_SPECTR_IP_RANGE_VALUES UNION ALL \r\n" + 
			"SELECT 'SDB_SPECTR_NO_ANSWER_IP' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_SPECTR_NO_ANSWER_IP";
			
		case "ETX" : 
			
			return  "SELECT 'SDB_ETX_IFTABLE' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_ETX_IFTABLE UNION ALL \r\n" + 
			"SELECT 'SDB_ETX_IFXTABLE' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_ETX_IFXTABLE UNION ALL \r\n" + 
			"SELECT 'SDB_ETX_SLOT_CARD' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_ETX_SLOT_CARD UNION ALL \r\n" + 
			"SELECT 'SDB_ETX_SNMP_ENTPHYSICALTABLE' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_ETX_SNMP_ENTPHYSICALTABLE UNION ALL \r\n" + 
			"SELECT 'SDB_ETX_SNMP_RESPONSE' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_ETX_SNMP_RESPONSE UNION ALL \r\n" + 
			"SELECT 'SDB_ETX_SYSDATA' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_ETX_SYSDATA";

		case "CMTS" :

			return  "SELECT 'SDB_CLI_CMTS_SUBINTERFACES_IP' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_CLI_CMTS_SUBINTERFACES_IP UNION ALL \r\n" + 
			"SELECT 'SDB_CLI_CMTS_SUBINTERFACES' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_CLI_CMTS_SUBINTERFACES";
		
		case "CMTS-OnDemand" :

			return  "SELECT 'SDB_CLI_CMTS_SUBINTERFACES_IP' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_CLI_CMTS_SUBINTERFACES_IP UNION ALL \r\n" + 
			"SELECT 'SDB_CLI_CMTS_SUBINTERFACES' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_CLI_CMTS_SUBINTERFACES";

		case "CIN" :
		case "CIN-OnDemand" :

			return "SELECT 'SDB_CIN_CLI_INTERFACE' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_CIN_CLI_INTERFACE UNION ALL \r\n" + 
			"SELECT 'SDB_CIN_DEVICE_HARDWARE' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_CIN_DEVICE_HARDWARE UNION ALL \r\n" + 
			"SELECT 'SDB_CIN_IP_ADDRESS' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_CIN_IP_ADDRESS UNION ALL \r\n" + 
			"SELECT 'SDB_CIN_OXIDIZED_DEVICE' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_CIN_OXIDIZED_DEVICE UNION ALL \r\n" + 
			"SELECT 'SDB_CIN_CLI_IF_STATUS' AS TABLE_NAME, COUNT(1) COUNT FROM SDB_CIN_CLI_IF_STATUS UNION ALL";
			
		case "FDB" :

			return "SELECT  'SDB_FDB_BACKBONE_INTERNET' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_BACKBONE_INTERNET UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_BUILD' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_BUILD UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_BUILDING' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_BUILDING UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_BUILDING_MG' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_BUILDING_MG UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_CABLEDEVICE_SRVGROUP' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_CABLEDEVICE_SRVGROUP UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_CITY' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_CITY UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_CITY_CODE' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_CITY_CODE UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_CITY_CODE_MG' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_CITY_CODE_MG UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_CMTSSLOTPORT_SRVGROUP' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_CMTSSLOTPORT_SRVGROUP UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_CMTSSLOT_PORT' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_CMTSSLOT_PORT UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_CMTS_SITE' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_CMTS_SITE UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_CMTS_SLOT' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_CMTS_SLOT UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_CON_HOUSING' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_CON_HOUSING UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_CON_HOUSING_IPV6' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_CON_HOUSING_IPV6 UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_INTERNET' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_INTERNET UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_IP_ADDRESS_APEX' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_IP_ADDRESS_APEX UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_LINK' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_LINK UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_LOCATION' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_LOCATION UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_NODE' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_NODE UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_NODE_IPV6' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_NODE_IPV6 UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_NODE_MG' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_NODE_MG UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_NODE_QR' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_NODE_QR UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_OPTICALRECEIVER' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_OPTICALRECEIVER UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_OPTRECEIVER_SRVGROUP' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_OPTRECEIVER_SRVGROUP UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_OPTREC_LOC' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_OPTREC_LOC UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_OPTREC_LOC_IPV6' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_OPTREC_LOC_IPV6 UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_OPTRX_TRIBUTARYPORT' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_OPTRX_TRIBUTARYPORT UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_RESID_MODEM_CNT_IPV6' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_RESID_MODEM_CNT_IPV6 UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_RFCHANNEL_PORT_MG' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_RFCHANNEL_PORT_MG UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_SITE' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_SITE UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_SITE_MG' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_SITE_MG UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_SPECTR_BUILDING' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_SPECTR_BUILDING UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_SPECTR_CITY' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_SPECTR_CITY UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_SPECTR_CON_HOUSING' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_SPECTR_CON_HOUSING UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_SPECTR_LOCATION' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_SPECTR_LOCATION UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_SPECTR_NODE' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_SPECTR_NODE UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_SPECTR_OPREC' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_SPECTR_OPREC UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_SPECTR_OPTREC_LOC' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_SPECTR_OPTREC_LOC UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_SPECTR_SITE' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_SPECTR_SITE UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_TELECOM_LOCATION' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_TELECOM_LOCATION UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_TELECOM_LOCATION_MG' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_TELECOM_LOCATION_MG UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_TWAG_IP_ADDR' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_TWAG_IP_ADDR UNION ALL \r\n" + 
			"SELECT  'SDB_FDB_TWAG_NODE' as TABLE_NAME, COUNT(1) COUNT FROM SDB_FDB_TWAG_NODE";
			
		case "IPV4" :

			return "SELECT  'SDB_IP_RANGE' AS TABLE_NAME, COUNT(1) COUNT FROM  SDB_IP_RANGE UNION ALL \r\n" + 
			"SELECT  'SDB_IP_ADDRESS' AS TABLE_NAME, COUNT(1) COUNT FROM  SDB_IP_ADDRESS UNION ALL \r\n" + 
			"SELECT  'SDB_IP_RANGE_OWNER' AS TABLE_NAME, COUNT(1) COUNT FROM  SDB_IP_RANGE_OWNER";

		default : 
			log.debug("Device Name not matching for any Query");
			return null;

		}				
	}
	
	public String getIDBQuery(String deviceName) {
		
		switch (deviceName) {

		case "IPBB" : 

			return 	"SELECT  'IDB_IPBB_AREA_PORT_PT' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_AREA_PORT_PT UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_AUTONOMOUS_SYSTEM' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_AUTONOMOUS_SYSTEM UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_BGP_MPLS_VPN' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_BGP_MPLS_VPN UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_BGP_NEIGHBOR' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_BGP_NEIGHBOR UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_BGP_PEER_GROUP' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_BGP_PEER_GROUP UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_CARD' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_CARD UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_DEVICE' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_DEVICE UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_DICT_CARD' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_DICT_CARD UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_DICT_PORT' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_DICT_PORT UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_DICT_SLOT' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_DICT_SLOT UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_DIC_DEVICE' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_DIC_DEVICE UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_ETHERNET_LINK' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_ETHERNET_LINK UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_ETHERNET_LINK_EP' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_ETHERNET_LINK_EP UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_ETHERNET_NETWORK' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_ETHERNET_NETWORK UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_INTF_IPV6_PT' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_INTF_IPV6_PT UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_INTF_IPV6_PTBL' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_INTF_IPV6_PTBL UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_IP_ADDRESS' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_IP_ADDRESS UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_IP_LINK' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_IP_LINK UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_IP_LINK_EP' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_IP_LINK_EP UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_LAG_CIRCUIT' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_LAG_CIRCUIT UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_LAG_EP' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_LAG_EP UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_LAG_IF' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_LAG_IF UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_LAG_IF_PORT_PT' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_LAG_IF_PORT_PT UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_LOOPBACK' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_LOOPBACK UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_NETWORK_ELEMENT' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_NETWORK_ELEMENT UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_OSPF_AREA' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_OSPF_AREA UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_OSPF_AREA_INT' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_OSPF_AREA_INT UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_OSPF_PROCESS' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_OSPF_PROCESS UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_POLICY_MAP' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_POLICY_MAP UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_PORT' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_PORT UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_RD' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_RD UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_RD_RANGE' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_RD_RANGE UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_RT' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_RT UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_RT_RANGE' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_RT_RANGE UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_SLOT' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_SLOT UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_STATIC_ROUTE' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_STATIC_ROUTE UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_VLAN' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_VLAN UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_VLAN_INTERFACE' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_VLAN_INTERFACE UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_VLAN_SUBIF' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_VLAN_SUBIF UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_VRF' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_VRF UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_VRF_ASSIGN_INT_PT' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_VRF_ASSIGN_INT_PT UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_VRF_RTE_PT' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_VRF_RTE_PT UNION ALL \r\n" + 
			"SELECT  'IDB_IPBB_VRF_RTI_PT' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_IPBB_VRF_RTI_PT";

		case "Alcatel" : 

			return "SELECT 'IDB_5620_ADMIN_GROUP' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_ADMIN_GROUP UNION ALL \r\n" + 
			"SELECT 'IDB_5620_ATM_SUBINTF' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_ATM_SUBINTF UNION ALL \r\n" + 
			"SELECT 'IDB_5620_BGP_PEER_GROUP' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_BGP_PEER_GROUP UNION ALL \r\n" + 
			"SELECT 'IDB_5620_BGP_VPN' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_BGP_VPN UNION ALL \r\n" + 
			"SELECT 'IDB_5620_CARD' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_CARD UNION ALL \r\n" + 
			"SELECT 'IDB_5620_CARD_1ST' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_CARD_1ST UNION ALL \r\n" + 
			"SELECT 'IDB_5620_CARD_3RD' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_CARD_3RD UNION ALL \r\n" + 
			"SELECT 'IDB_5620_AUTO_SYS' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_AUTO_SYS UNION ALL \r\n" + 
			"SELECT 'IDB_5620_BGP_NEIGHBOR' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_BGP_NEIGHBOR UNION ALL \r\n" + 
			"SELECT 'IDB_5620_CARD_2ND' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_CARD_2ND UNION ALL \r\n" + 
			"SELECT 'IDB_5620_CIRCUIT' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_CIRCUIT UNION ALL \r\n" + 
			"SELECT 'IDB_5620_CIRCUIT_PE' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_CIRCUIT_PE UNION ALL \r\n" + 
			"SELECT 'IDB_5620_DEVICE' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_DEVICE UNION ALL \r\n" + 
			"SELECT 'IDB_5620_INNER_VLAN' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_INNER_VLAN UNION ALL \r\n" + 
			"SELECT 'IDB_5620_INT_ADM_GR' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_INT_ADM_GR UNION ALL \r\n" + 
			"SELECT 'IDB_5620_IPV6_PT' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_IPV6_PT UNION ALL \r\n" + 
			"SELECT 'IDB_5620_IP_ADDRESS' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_IP_ADDRESS UNION ALL \r\n" + 
			"SELECT 'IDB_5620_IP_ADDRESS_PT' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_IP_ADDRESS_PT UNION ALL \r\n" + 
			"SELECT 'IDB_5620_IP_LINK' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_IP_LINK UNION ALL \r\n" + 
			"SELECT 'IDB_5620_IP_LINK_END_POINT' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_IP_LINK_END_POINT UNION ALL \r\n" + 
			"SELECT 'IDB_5620_LAG' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_LAG UNION ALL \r\n" + 
			"SELECT 'IDB_5620_LAG_IP_ADDRESS' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_LAG_IP_ADDRESS UNION ALL \r\n" + 
			"SELECT 'IDB_5620_LAG_POL_MAP' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_LAG_POL_MAP UNION ALL \r\n" + 
			"SELECT 'IDB_5620_LAG_PORTS' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_LAG_PORTS UNION ALL \r\n" + 
			"SELECT 'IDB_5620_LOCATION' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_LOCATION UNION ALL \r\n" + 
			"SELECT 'IDB_5620_LOOPBACK_INTF' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_LOOPBACK_INTF UNION ALL \r\n" + 
			"SELECT 'IDB_5620_LSP_ADM_GR_E' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_LSP_ADM_GR_E UNION ALL \r\n" + 
			"SELECT 'IDB_5620_LSP_ADM_GR_I' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_LSP_ADM_GR_I UNION ALL \r\n" + 
			"SELECT 'IDB_5620_LSP_HOP' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_LSP_HOP UNION ALL \r\n" + 
			"SELECT 'IDB_5620_LSP_PATH' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_LSP_PATH UNION ALL \r\n" + 
			"SELECT 'IDB_5620_MPLS_TUNNEL' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_MPLS_TUNNEL UNION ALL \r\n" + 
			"SELECT 'IDB_5620_MPLS_TUNNEL_EP' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_MPLS_TUNNEL_EP UNION ALL \r\n" + 
			"SELECT 'IDB_5620_NE' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_NE UNION ALL \r\n" + 
			"SELECT 'IDB_5620_NE_AG' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_NE_AG UNION ALL \r\n" + 
			"SELECT 'IDB_5620_OSPFAREA_INTF' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_OSPFAREA_INTF UNION ALL \r\n" + 
			"SELECT 'IDB_5620_OSPF_AREA' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_OSPF_AREA UNION ALL \r\n" + 
			"SELECT 'IDB_5620_OSPF_PROCESS' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_OSPF_PROCESS UNION ALL \r\n" + 
			"SELECT 'IDB_5620_POL_MAP' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_POL_MAP UNION ALL \r\n" + 
			"SELECT 'IDB_5620_PORT' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_PORT UNION ALL \r\n" + 
			"SELECT 'IDB_5620_PSEUDOWIRE' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_PSEUDOWIRE UNION ALL \r\n" + 
			"SELECT 'IDB_5620_PSEUDOWIRE_EP' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_PSEUDOWIRE_EP UNION ALL \r\n" + 
			"SELECT 'IDB_5620_PSW_MPLS_TUNNEL' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_PSW_MPLS_TUNNEL UNION ALL \r\n" + 
			"SELECT 'IDB_5620_RD' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_RD UNION ALL \r\n" + 
			"SELECT 'IDB_5620_RD_RANGE' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_RD_RANGE UNION ALL \r\n" + 
			"SELECT 'IDB_5620_RT' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_RT UNION ALL \r\n" + 
			"SELECT 'IDB_5620_RT_RANGE' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_RT_RANGE UNION ALL \r\n" + 
			"SELECT 'IDB_5620_SLOT_1ST' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_SLOT_1ST UNION ALL \r\n" + 
			"SELECT 'IDB_5620_SLOT_2ND' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_SLOT_2ND UNION ALL \r\n" + 
			"SELECT 'IDB_5620_SLOT_3RD' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_SLOT_3RD UNION ALL \r\n" + 
			"SELECT 'IDB_5620_SRLG' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_SRLG UNION ALL \r\n" + 
			"SELECT 'IDB_5620_SRLG_PARAM' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_SRLG_PARAM UNION ALL \r\n" + 
			"SELECT 'IDB_5620_STATIC_ROUTE' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_STATIC_ROUTE UNION ALL \r\n" + 
			"SELECT 'IDB_5620_SVLAN' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_SVLAN UNION ALL \r\n" + 
			"SELECT 'IDB_5620_VLAN' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_VLAN UNION ALL \r\n" + 
			"SELECT 'IDB_5620_VLANSUBINTF_POL_MAP' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_VLANSUBINTF_POL_MAP UNION ALL \r\n" + 
			"SELECT 'IDB_5620_VLAN_INTERFACE' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_VLAN_INTERFACE UNION ALL \r\n" + 
			"SELECT 'IDB_5620_VLAN_MEMBER' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_VLAN_MEMBER UNION ALL \r\n" + 
			"SELECT 'IDB_5620_VLAN_SUBINTF' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_VLAN_SUBINTF UNION ALL \r\n" + 
			"SELECT 'IDB_5620_VPLS' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_VPLS UNION ALL \r\n" + 
			"SELECT 'IDB_5620_VPLS_MEMBER' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_VPLS_MEMBER UNION ALL \r\n" + 
			"SELECT 'IDB_5620_VRF' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_VRF UNION ALL \r\n" + 
			"SELECT 'IDB_5620_VRF_ATT_INT' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_VRF_ATT_INT UNION ALL \r\n" + 
			"SELECT 'IDB_5620_VRF_PSEUDOWIRE' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_VRF_PSEUDOWIRE UNION ALL \r\n" + 
			"SELECT 'IDB_5620_VSI' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_VSI UNION ALL \r\n" + 
			"SELECT 'IDB_5620_VSI_ATTACHMENT_INT' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_VSI_ATTACHMENT_INT UNION ALL \r\n" + 
			"SELECT 'IDB_5620_VSI_PSEUDOWIRE' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_VSI_PSEUDOWIRE UNION ALL \r\n" + 
			"SELECT 'IDB_5620_CIRCUIT_FOLDER' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_CIRCUIT_FOLDER UNION ALL \r\n" + 
			"SELECT 'IDB_5620_II' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_II UNION ALL \r\n" + 
			"SELECT 'IDB_5620_IP_RANGE' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_IP_RANGE UNION ALL \r\n" + 
			"SELECT 'IDB_5620_MULTILINK_INTERFACE' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_MULTILINK_INTERFACE UNION ALL \r\n" + 
			"SELECT 'IDB_5620_NETWORK' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_5620_NETWORK";

		case "Spectrum" :
			
			return  "SELECT 'IDB_SPECTR_SERVICE_GROUP' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_SPECTR_SERVICE_GROUP UNION ALL \r\n" + 
			"SELECT 'IDB_SPECTR_NETWORK_ELEMENT' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_SPECTR_NETWORK_ELEMENT UNION ALL \r\n" + 
			"SELECT 'IDB_SPECTR_IP_ADDRESS' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_SPECTR_IP_ADDRESS UNION ALL \r\n" + 
			"SELECT 'IDB_SPECTR_DIC_SLOT_TYPE' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_SPECTR_DIC_SLOT_TYPE UNION ALL \r\n" + 
			"SELECT 'IDB_SPECTR_DIC_PORT_TYPE' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_SPECTR_DIC_PORT_TYPE UNION ALL \r\n" + 
			"SELECT 'IDB_SPECTR_DICT_DEVICE' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_SPECTR_DICT_DEVICE UNION ALL \r\n" + 
			"SELECT 'IDB_SPECTR_DICT_CARD' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_SPECTR_DICT_CARD UNION ALL \r\n" + 
			"SELECT 'IDB_SPECTR_CHANNEL_GROUP_UP' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_SPECTR_CHANNEL_GROUP_UP UNION ALL \r\n" + 
			"SELECT 'IDB_SPECTR_CHANNEL_GROUP_DP' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_SPECTR_CHANNEL_GROUP_DP UNION ALL \r\n" + 
			"SELECT 'IDB_SPECTR_CHANNEL_GROUP' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_SPECTR_CHANNEL_GROUP";
			
		case "ETX" : 
			
			return  "SELECT 'IDB_ETX_SLOT' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_ETX_SLOT UNION ALL \r\n" + 
			"SELECT 'IDB_ETX_PORT' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_ETX_PORT UNION ALL \r\n" + 
			"SELECT 'IDB_ETX_NETWORK_ELEMENT' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_ETX_NETWORK_ELEMENT UNION ALL \r\n" + 
			"SELECT 'IDB_ETX_IP_ADDRESS' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_ETX_IP_ADDRESS UNION ALL \r\n" + 
			"SELECT 'IDB_ETX_DEVICE' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_ETX_DEVICE UNION ALL \r\n" + 
			"SELECT 'IDB_ETX_CARD' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_ETX_CARD";

		case "CMTS" :

			return  "SELECT 'IDB_CMTS_DICT_CARD' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_CMTS_DICT_CARD UNION ALL \r\n" + 
			"SELECT 'IDB_CMTS_DICT_DEVICE' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_CMTS_DICT_DEVICE UNION ALL \r\n" + 
			"SELECT 'IDB_CMTS_DIC_PORT_TYPE' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_CMTS_DIC_PORT_TYPE UNION ALL \r\n" + 
			"SELECT 'IDB_CMTS_DIC_SLOT_TYPE' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_CMTS_DIC_SLOT_TYPE";
			
		case "CMTS-OnDemand" :

			return  "SELECT 'IDB_CMTS_DICT_CARD' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_CMTS_DICT_CARD UNION ALL \r\n" + 
			"SELECT 'IDB_CMTS_DICT_DEVICE' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_CMTS_DICT_DEVICE UNION ALL \r\n" + 
			"SELECT 'IDB_CMTS_DIC_PORT_TYPE' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_CMTS_DIC_PORT_TYPE UNION ALL \r\n" + 
			"SELECT 'IDB_CMTS_DIC_SLOT_TYPE' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_CMTS_DIC_SLOT_TYPE";

		case "CIN" :
		case "CIN-OnDemand" :
			
			return "SELECT 'IDB_CIN_SLOT' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_CIN_SLOT UNION ALL \r\n" + 
			"SELECT 'IDB_CIN_PORT' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_CIN_PORT UNION ALL \r\n" + 
			"SELECT 'IDB_CIN_NETWORK_ELEMENT' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_CIN_NETWORK_ELEMENT UNION ALL \r\n" + 
			"SELECT 'IDB_CIN_LAG_TO_PORT' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_CIN_LAG_TO_PORT UNION ALL \r\n" + 
			"SELECT 'IDB_CIN_LAG' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_CIN_LAG UNION ALL \r\n" + 
			"SELECT 'IDB_CIN_IP_ADDRESS' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_CIN_IP_ADDRESS UNION ALL \r\n" + 
			"SELECT 'IDB_CIN_INTERFACE_TO_IPV6' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_CIN_INTERFACE_TO_IPV6 UNION ALL \r\n" + 
			"SELECT 'IDB_CIN_INTERFACE_TO_IP' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_CIN_INTERFACE_TO_IP UNION ALL \r\n" + 
			"SELECT 'IDB_CIN_DEVICE' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_CIN_DEVICE UNION ALL \r\n" + 
			"SELECT 'IDB_CIN_CARD' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_CIN_CARD";
			
		case "FDB" :

			return "SELECT  'IDB_FDB_HHS_DEVICE' as TABLE_NAME, COUNT(1) COUNT FROM IDB_FDB_HHS_DEVICE UNION ALL \r\n" + 
			"SELECT  'IDB_FDB_IP_ADDR' as TABLE_NAME, COUNT(1) COUNT FROM IDB_FDB_IP_ADDR UNION ALL \r\n" + 
			"SELECT  'IDB_FDB_SNMP_MDL_DICT' as TABLE_NAME, COUNT(1) COUNT FROM IDB_FDB_SNMP_MDL_DICT UNION ALL \r\n" + 
			"SELECT  'IDB_FDB_TWAG' as TABLE_NAME, COUNT(1) COUNT FROM IDB_FDB_TWAG";
			
		case "IPV4" :

			return "SELECT  'IDB_PUBLIC_IP_RANGE' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_PUBLIC_IP_RANGE UNION ALL \r\n" + 
			"SELECT  'IDB_PRIVATE_IP_RANGE' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_PRIVATE_IP_RANGE UNION ALL\r\n" + 
			"SELECT  'IDB_PUBLIC_IP_ADDRESS' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_PUBLIC_IP_ADDRESS UNION ALL \r\n" + 
			"SELECT  'IDB_PRIVATE_IP_ADDRESS' AS TABLE_NAME, COUNT(1) COUNT FROM IDB_PRIVATE_IP_ADDRESS";


		default :  
			log.debug("Do Nothing");
			return null;
		}
		
	}
	
	
	
	public String deleteQuery()
	{
		return "begin\r\n" + 
			   "pkg_parallel_delete.clear_table;\r\n" + 
			   "insert into nc_parallel_delete\r\n" + 
			   "select object_id from nc_objects where level > 1\r\n" + 
			   "start with object_id in (\r\n" + 
			   "select object_id from nc_objects where object_class_id = 3061830882013808530 and project_id =9142773846513312527    )\r\n" + 
			   "connect by parent_id = prior object_id union\r\n" + 
			   "select object_id from nc_objects where object_class_id in (8, 301 ) and project_id=9142773846513312527 union\r\n" + 
			   "select object_id from nc_objects where object_type_id = 9130272113513839964 and project_id=9142773846513312527 union\r\n" + 
			   "select object_id from nc_objects where object_type_id=9130317683513853208 and project_id=9142773846513312527;\r\n" +
			   "commit;\r\n" + 
			   "pkg_parallel_delete.delete_prepared_set(p_parallel_level => 8);\r\n" + 
			   "end\r\n";
	}
	
	public String getObjectQuery()
	{
		return "SELECT execution_date ,\r\n" + 
				"  'NC_ROBJ' ||document_id ||'_0' ||table_no AS tab\r\n" + 
				"FROM nc_rec_info\r\n" + 
				"WHERE (document_id,?) IN\r\n" + 
				"  (SELECT object_id,name FROM nc_objects\r\n" + 
				"  )\r\n" + 
				"ORDER BY execution_date DESC";
	}
	
	public String getActionsQuery(String query)
	{
		System.out.println("Entered getActionsQuery with query : " + query);
		return query;
	}
	
	public String runReconQuery(String tableName)
	{	
		return "SELECT ot.name,\r\n" + 
				"case\r\n" + 
				"when ACTION = 1 then 'No Action'\r\n" + 
				"when action = 2 then 'Update'\r\n" + 
				"when action = 3 then 'Insert'\r\n" + 
				"when action = 4 then 'Delete'\r\n" + 
				"when action = 5 then 'Duplicate PK'\r\n" + 
				"when action = 6 then 'Multiple Object Entry'\r\n" + 
				"when action = 7 then 'Parent with Duplicate PK'\r\n" + 
				"when action = 8 then 'Duplicate Internal PK'\r\n" + 
				"when action = 9 then 'Wrong Moved'\r\n" + 
				"when action = 10 then 'Update Instead of Delete'\r\n" + 
				"when action = 11 then 'No Action Instead if Delete'\r\n" + 
				"end ACTIONS,\r\n" + 
				"COUNT(1) FROM " + tableName + " rec\r\n" + 
				"join nc_object_types ot on ot.object_type_id=rec.object_type_id\r\n" + 
				"GROUP BY ot.name,ACTION";
	}
	
	public String falloutTableQuery()
	{
		return "select flt.value  from nc_params_ix ix\r\n" + 
				"join nc_references r on r.object_id=ix.object_id and r.attr_id=8091667036013846338 and r.reference=? /* Validation Pool */\r\n" + 
				"join nc_params flt on flt.object_id=ix.object_id and flt.attr_id=9131179495913091804\r\n" + 
				"where ix.attr_id=9080751104013183036 and ix_key=?  /* Integration Session ID */  ";
	}
	
	public String fallOutsQuery(String tableName)
	{
		return "select table_name, count(1) count from " + tableName + "  group by table_name";
	}

	public String getVlanDataQuery(String poolId) {
		
		if ( poolId.equalsIgnoreCase("4000-4005")) {
		return "select vlanid.vlan vlan, vlan_id, account_number, status, created_when from\r\n" + 
				"(select obj.name vlan, vlanid.value as vlan_id from nc_params vlanid, (select object_id, name from nc_objects where object_type_id = 9130429332613875727 /* Inner VLAN */ and parent_id = 9152518411613827802 /* SVLAN4000 */) obj where vlanid.object_id = obj.object_id and vlanid.attr_id = 9130437029213878097 /* VLAN ID */) vlanid\r\n" + 
				"left join\r\n" + 
				"(select obj.name vlan, acc.value as account_number from nc_params acc, (select object_id, name from nc_objects where object_type_id = 9130429332613875727 /* Inner VLAN */ and parent_id = 9152518411613827802 /* SVLAN4000 */) obj where acc.object_id = obj.object_id and acc.attr_id = 9152567450013439529 /* Account Number */) acct\r\n" + 
				"on vlanid.vlan = acct.vlan\r\n" + 
				"left join\r\n" + 
				"(select obj.name vlan, stat.value as status from nc_list_values stat, nc_params lv, (select object_id, name from nc_objects where object_type_id = 9130429332613875727 /* Inner VLAN */ and parent_id = 9152518411613827802 /* SVLAN4000 */) obj where lv.object_id = obj.object_id and lv.attr_id = 9152270799713921757 /* Status */ and stat.list_value_id = lv.list_value_id) status\r\n" + 
				"on vlanid.vlan = status.vlan\r\n" + 
				"left join\r\n" + 
				"(select obj.name vlan, crdt.date_value as created_when from nc_params crdt, (select object_id, name from nc_objects where object_type_id = 9130429332613875727 /* Inner VLAN */ and parent_id = 9152518411613827802 /* SVLAN4000 */) obj where crdt.object_id = obj.object_id and crdt.attr_id = 62 /* Created When */) creatdt\r\n" + 
				"on vlanid.vlan = creatdt.vlan";
		}
		else { 
			return " select vlanid.vlan vlan, vlan_id, account_number, status, created_when from\r\n" + 
					"(select obj.name vlan, vlanid.value as vlan_id from nc_params vlanid, (select object_id, name from nc_objects where object_type_id = 9130429332613875727 /* Inner VLAN */ and parent_id = 9152526197113823217 /* SVLAN24 */) obj where vlanid.object_id = obj.object_id and vlanid.attr_id = 9130437029213878097 /* VLAN ID */) vlanid\r\n" + 
					"left join\r\n" + 
					"(select obj.name vlan, acc.value as account_number from nc_params acc, (select object_id, name from nc_objects where object_type_id = 9130429332613875727 /* Inner VLAN */ and parent_id = 9152526197113823217 /* SVLAN24 */) obj where acc.object_id = obj.object_id and acc.attr_id = 9152567450013439529 /* Account Number */) acct\r\n" + 
					"on vlanid.vlan = acct.vlan\r\n" + 
					"left join\r\n" + 
					"(select obj.name vlan, stat.value as status from nc_list_values stat, nc_params lv, (select object_id, name from nc_objects where object_type_id = 9130429332613875727 /* Inner VLAN */ and parent_id = 9152526197113823217 /* SVLAN24 */) obj where lv.object_id = obj.object_id and lv.attr_id = 9152270799713921757 /* Status */ and stat.list_value_id = lv.list_value_id) status\r\n" + 
					"on vlanid.vlan = status.vlan\r\n" + 
					"left join\r\n" + 
					"(select obj.name vlan, crdt.date_value as created_when from nc_params crdt, (select object_id, name from nc_objects where object_type_id = 9130429332613875727 /* Inner VLAN */ and parent_id = 9152526197113823217 /* SVLAN24 */) obj where crdt.object_id = obj.object_id and crdt.attr_id = 62 /* Created When */) creatdt\r\n" + 
					"on vlanid.vlan = creatdt.vlan";
		}
		
	}

	public String getVlanMinDateQuery(String poolOption) {
		// TODO Auto-generated method stub
		if ( poolOption.equalsIgnoreCase("4000-4005")) {
			return "select to_char(min(created_when), 'dd-mm-yy hh:mi:ss AM') created_when\r\n" + 
					"from\r\n" + 
					"(select obj.name vlan, vlanid.value as vlan_id from nc_params vlanid, (select object_id, name from nc_objects where object_type_id = 9130429332613875727 /* Inner VLAN */ and parent_id = 9152518411613827802 /* SVLAN4000 */) obj where vlanid.object_id = obj.object_id and vlanid.attr_id = 9130437029213878097 /* VLAN ID */) vlanid\r\n" + 
					"left join\r\n" + 
					"(select obj.name vlan, acc.value as account_number from nc_params acc, (select object_id, name from nc_objects where object_type_id = 9130429332613875727 /* Inner VLAN */ and parent_id = 9152518411613827802 /* SVLAN4000 */) obj where acc.object_id = obj.object_id and acc.attr_id = 9152567450013439529 /* Account Number */) acct\r\n" + 
					"on vlanid.vlan = acct.vlan\r\n" + 
					"left join\r\n" + 
					"(select obj.name vlan, stat.value as status from nc_list_values stat, nc_params lv, (select object_id, name from nc_objects where object_type_id = 9130429332613875727 /* Inner VLAN */ and parent_id = 9152518411613827802 /* SVLAN4000 */) obj where lv.object_id = obj.object_id and lv.attr_id = 9152270799713921757 /* Status */ and stat.list_value_id = lv.list_value_id) status\r\n" + 
					"on vlanid.vlan = status.vlan\r\n" + 
					"left join\r\n" + 
					"(select obj.name vlan, crdt.date_value as created_when from nc_params crdt, (select object_id, name from nc_objects where object_type_id = 9130429332613875727 /* Inner VLAN */ and parent_id = 9152518411613827802 /* SVLAN4000 */) obj where crdt.object_id = obj.object_id and crdt.attr_id = 62 /* Created When */) creatdt\r\n" + 
					"on vlanid.vlan = creatdt.vlan";
			}
			else {  
				return "select to_char(min(created_when), 'dd-mm-yy hh:mi:ss AM') created_when\r\n" + 
						"from\r\n" +
						"(select obj.name vlan, vlanid.value as vlan_id from nc_params vlanid, (select object_id, name from nc_objects where object_type_id = 9130429332613875727 /* Inner VLAN */ and parent_id = 9152526197113823217 /* SVLAN24 */) obj where vlanid.object_id = obj.object_id and vlanid.attr_id = 9130437029213878097 /* VLAN ID */) vlanid\r\n" + 
						"left join\r\n" + 
						"(select obj.name vlan, acc.value as account_number from nc_params acc, (select object_id, name from nc_objects where object_type_id = 9130429332613875727 /* Inner VLAN */ and parent_id = 9152526197113823217 /* SVLAN24 */) obj where acc.object_id = obj.object_id and acc.attr_id = 9152567450013439529 /* Account Number */) acct\r\n" + 
						"on vlanid.vlan = acct.vlan\r\n" + 
						"left join\r\n" + 
						"(select obj.name vlan, stat.value as status from nc_list_values stat, nc_params lv, (select object_id, name from nc_objects where object_type_id = 9130429332613875727 /* Inner VLAN */ and parent_id = 9152526197113823217 /* SVLAN24 */) obj where lv.object_id = obj.object_id and lv.attr_id = 9152270799713921757 /* Status */ and stat.list_value_id = lv.list_value_id) status\r\n" + 
						"on vlanid.vlan = status.vlan\r\n" + 
						"left join\r\n" + 
						"(select obj.name vlan, crdt.date_value as created_when from nc_params crdt, (select object_id, name from nc_objects where object_type_id = 9130429332613875727 /* Inner VLAN */ and parent_id = 9152526197113823217 /* SVLAN24 */) obj where crdt.object_id = obj.object_id and crdt.attr_id = 62 /* Created When */) creatdt\r\n" + 
						"on vlanid.vlan = creatdt.vlan";
			}
	}

	public String getVlanPoolCountQuery(String poolOption) {

		if ( poolOption.equalsIgnoreCase("4000-4005") || poolOption.equalsIgnoreCase("4000-4000")) {
			return "select count(*) as COUNT\r\n" + 
					"from\r\n" + 
					"(select obj.name vlan, vlanid.value as vlan_id from nc_params vlanid, (select object_id, name from nc_objects where object_type_id = 9130429332613875727 /* Inner VLAN */ and parent_id = 9152518411613827802 /* SVLAN4000 */) obj where vlanid.object_id = obj.object_id and vlanid.attr_id = 9130437029213878097 /* VLAN ID */) vlanid\r\n" + 
					"left join\r\n" + 
					"(select obj.name vlan, acc.value as account_number from nc_params acc, (select object_id, name from nc_objects where object_type_id = 9130429332613875727 /* Inner VLAN */ and parent_id = 9152518411613827802 /* SVLAN4000 */) obj where acc.object_id = obj.object_id and acc.attr_id = 9152567450013439529 /* Account Number */) acct\r\n" + 
					"on vlanid.vlan = acct.vlan\r\n" + 
					"left join\r\n" + 
					"(select obj.name vlan, stat.value as status from nc_list_values stat, nc_params lv, (select object_id, name from nc_objects where object_type_id = 9130429332613875727 /* Inner VLAN */ and parent_id = 9152518411613827802 /* SVLAN4000 */) obj where lv.object_id = obj.object_id and lv.attr_id = 9152270799713921757 /* Status */ and stat.list_value_id = lv.list_value_id) status\r\n" + 
					"on vlanid.vlan = status.vlan\r\n" + 
					"left join\r\n" + 
					"(select obj.name vlan, crdt.date_value as created_when from nc_params crdt, (select object_id, name from nc_objects where object_type_id = 9130429332613875727 /* Inner VLAN */ and parent_id = 9152518411613827802 /* SVLAN4000 */) obj where crdt.object_id = obj.object_id and crdt.attr_id = 62 /* Created When */) creatdt\r\n" + 
					"on vlanid.vlan = creatdt.vlan";
		}
		else {
			return "select count(*) as COUNT\r\n" + 
			"from\r\n" + 
			"(select obj.name vlan, vlanid.value as vlan_id from nc_params vlanid, (select object_id, name from nc_objects where object_type_id = 9130429332613875727 /* Inner VLAN */ and parent_id = 9152526197113823217 /* SVLAN24 */) obj where vlanid.object_id = obj.object_id and vlanid.attr_id = 9130437029213878097 /* VLAN ID */) vlanid\r\n" + 
			"left join\r\n" + 
			"(select obj.name vlan, acc.value as account_number from nc_params acc, (select object_id, name from nc_objects where object_type_id = 9130429332613875727 /* Inner VLAN */ and parent_id = 9152526197113823217 /* SVLAN24 */) obj where acc.object_id = obj.object_id and acc.attr_id = 9152567450013439529 /* Account Number */) acct\r\n" + 
			"on vlanid.vlan = acct.vlan\r\n" + 
			"left join\r\n" + 
			"(select obj.name vlan, stat.value as status from nc_list_values stat, nc_params lv, (select object_id, name from nc_objects where object_type_id = 9130429332613875727 /* Inner VLAN */ and parent_id = 9152526197113823217 /* SVLAN24 */) obj where lv.object_id = obj.object_id and lv.attr_id = 9152270799713921757 /* Status */ and stat.list_value_id = lv.list_value_id) status\r\n" + 
			"on vlanid.vlan = status.vlan\r\n" + 
			"left join\r\n" + 
			"(select obj.name vlan, crdt.date_value as created_when from nc_params crdt, (select object_id, name from nc_objects where object_type_id = 9130429332613875727 /* Inner VLAN */ and parent_id = 9152526197113823217 /* SVLAN24 */) obj where crdt.object_id = obj.object_id and crdt.attr_id = 62 /* Created When */) creatdt\r\n" + 
			"on vlanid.vlan = creatdt.vlan";
		}
	}

	public String getObjectActionsQuery(String isCount , String deviceName) {
		
		switch (deviceName) {

		case "IPBB" : 
			if ( isCount.equalsIgnoreCase("Yes"))
			{
				return 	"select action from nc_rec_obj9145692433313670186 where object_id = ?";
			}
			else
			{
				return 	"select name from nc_rec_obj9145692433313670186 where object_id = ?";
			}

		case "Spectrum" : 
			
			if ( isCount.equalsIgnoreCase("Yes"))
			{
				return 	"select action from nc_rec_obj9145189723013348792 where object_id = ?";
			}
			else
			{
				return 	"select name from nc_rec_obj9145189723013348792 where object_id = ?";
			}
			
		case "ETX" : 
			
			if ( isCount.equalsIgnoreCase("Yes"))
			{
				return 	"select action from nc_rec_obj9151710934913719258 where object_id = ?";
			}
			else
			{
				return 	"select name from nc_rec_obj9151710934913719258 where object_id = ?";
			}
			
		case "CMTS" :

			if ( isCount.equalsIgnoreCase("Yes"))
			{
				return 	"select action from nc_rec_obj9143308250013749189 where object_id = ?";
			}
			else
			{
				return 	"select name from nc_rec_obj9143308250013749189 where object_id = ?";
			}
			
		case "FDB" :
			
			if ( isCount.equalsIgnoreCase("Yes"))
			{
				return 	"select action from nc_rec_obj9142795970013432508  where object_id = ?";
			}
			else
			{
				return 	"select name from nc_rec_obj9142795970013432508  where object_id = ?";
			}
			
		case "IPV4" :
			
			if ( isCount.equalsIgnoreCase("Yes"))
			{
				return 	"select action from nc_rec_obj9152590184013408095 where object_id = ?";
			}
			else
			{
				return 	"select name from nc_rec_obj9152590184013408095 where object_id = ?";
			}


		default : 
			log.debug("Device Name not matching for any Query");
			return null;
		}	
		
		
	}
	
	
	public String getTableForIntegrations(String deviceName)
	{
		
		switch ( deviceName )
		{

		case "IPBB" :
		case "Alcatel" :
		case "ETX" :
		case "CIN" :
		case "CMTS" :
		case "Spectrum" :
		case "FDB" :
		case "IPV4" :

			return "select pkgreconciliation.getTempName('NC_REC_OBJ', document_id, table_no) tab\r\n" + 
			"   from nc_rec_info\r\n" + 
			"  where transaction_id in\r\n" + 
			"     (select transaction_id\r\n" + 
			"     from nc_rec_info\r\n" + 
			"    where business_session_id = ?)";


		case "CMTS-OnDemand" :

			return  "select pkgreconciliation.getTempName('NC_REC_OBJ', document_id, table_no) tab\r\n" + 
			"from nc_rec_info\r\n" + 
			"where transaction_id in\r\n" + 
			"(select r.transaction_id\r\n" + 
			"from nc_rec_info r,\r\n" + 
			"(select o.object_id business_session_id\r\n" + 
			"from (select object_id\r\n" + 
			"from nc_objects\r\n" + 
			"start with object_id = ?\r\n" + 
			"connect by prior object_id = parent_id) o\r\n" + 
			"join nc_references ref\r\n" + 
			"on ref.object_id = o.object_id\r\n" + 
			"and ref.attr_id = 6061354112013836255\r\n" + 
			"and ref.reference = 9151602897313977708) s\r\n" + 
			"where r.business_session_id = s.business_session_id)";
			
		case "CIN-OnDemand" : 
			
			return "select pkgreconciliation.gettempname('NC_REC_OBJ', document_id, table_no) tab\r\n" + 
					"			from nc_rec_info\r\n" + 
					"			where transaction_id in\r\n" + 
					"			(select r.transaction_id\r\n" + 
					"			from nc_rec_info r,\r\n" + 
					"			(select o.object_id business_session_id\r\n" + 
					"			from (select object_id\r\n" + 
					"			from nc_objects\r\n" + 
					"			start with object_id = ?\r\n" + 
					"			connect by prior object_id = parent_id) o\r\n" + 
					"			join nc_references ref\r\n" + 
					"			on ref.object_id = o.object_id\r\n" + 
					"			and ref.attr_id = 6061354112013836255 /* Source Configuration */\r\n" + 
					"			and ref.reference = 9153059291913517507 /* CIN SNMP Network Discovery (Reconcile) */ ) s\r\n" + 
					"			where r.business_session_id = s.business_session_id)";

		default : 
			log.debug("Device Name not matching for any Query");
			return null;
		}
		
	}

	public String getObjectDeleteQuery() {
		return "delete from nc_objects where object_id=?";
	}

	public String selectObjectQuery() {
		return "select count(*) COUNT from nc_objects where object_id=?";
	}
	
	public String getSrcObjectCountQuery(String tableName) {
		return "select count(*) COUNT from " + tableName +  " where source_object_id=?";
	}
	
	public String getActionsWithTableQuery(String tableName) {
		return "select object_id , action from " + tableName +  "  where object_id = ?";
	}
	
	public String getNameWithTableQuery(String tableName) {
		return "select name from " + tableName +  "  where object_id = ?";
	}
	
	public String getActionsWithObjName(String tableName, String deviceName, String objectName) {
		
		switch (deviceName) {

		case "IPBB" : 

			return  "select action from " + tableName +  "  where name = '" + objectName + "' and table_id = 9145632576513015456";

		case "Alcatel" : 

			return 	"select action from " + tableName +  "  where name = '" + objectName + "'and table_id = 9145548261513499967";

		case "Spectrum" : 
			
			return 	"select action from " + tableName +  "  where name = '" + objectName + "' and table_id = 9145078577713996400";
			
		case "ETX" : 
			
			return 	"select action from " + tableName +  "  where name = '" + objectName + "' and table_id = 9151732581413976305";

		case "CMTS" :

			return 	"select action from " + tableName +  "  where name = '" + objectName + "' and table_id = 9142715309413303716";
		
		case "CMTS-OnDemand" :

			return 	"select action from " + tableName +  "  where name = '" + objectName + "' and table_id = 9144103493613635647";

		case "CIN" :

			return	"select action from " + tableName +  "  where name = '" + objectName + "' and table_id = 9153097056613088245";
			
		case "FDB" :

			return 	"select action from " + tableName +  "  where name = '" + objectName + "' and table_id = 9153724094013341209";
			
		case "IPV4" :

			return 	"select action from " + tableName +  "  where name = '" + objectName + "' and table_id = 9148933407213206346";

		default : 
			log.debug("Device Name not matching for any Query");
			return null;
		}	
		
		
	}

	public String getObjIdFromDnsQuery(String dnsName) {
		
		return  "select /*+ leading( p ) */ ne.object_id\r\n" + 
				"from nc_references ne, nc_params_ix p\r\n" + 
				"where ne.reference = p.object_id\r\n" + 
				"and ne.attr_id = 3091842003013833782\r\n" + 
				"and p.attr_id = 9142773846513312545\r\n" + 
				"and p.ix_key = upper('" + dnsName + "')";
	}
	
	
	public String getObjAndStatusForIPQuery(String paramType) {
		
		if ( paramType.equalsIgnoreCase("Object"))
		{
		
		return  "select /*+ leading (p) */\r\n" + 
				"p.object_id\r\n" + 
				"from nc_objects o, nc_params p, nc_params status\r\n" + 
				"where o.object_id = p.object_id\r\n" + 
				"and o.object_type_id = 14002\r\n" + 
				"and p.attr_id = 14101 /* IP Address */\r\n" + 
				"and p.value = ? \r\n" + 
				"and p.object_id = status.object_id(+)\r\n" + 
				"and status.attr_id(+) = 9142823156013495257";
		}
		else { 
			
			return  "select /*+ leading (p) */\r\n" + 
					"decode(status.list_value_id,\r\n" + 
					"9142823156013495303,\r\n" + 
					"'Available',\r\n" + 
					"9142823156013495304,\r\n" + 
					"'Assigned',\r\n" + 
					"9142823173413497306,\r\n" + 
					"'Blocked',\r\n" + 
					"9142823173413497307,\r\n" + 
					"'Reserved',\r\n" + 
					"9142823173413497308,\r\n" + 
					"'Removed') status\r\n" + 
					"from nc_objects o, nc_params p, nc_params status\r\n" + 
					"where o.object_id = p.object_id\r\n" + 
					"and o.object_type_id = 14002\r\n" + 
					"and p.attr_id = 14101 /* IP Address */\r\n" + 
					"and p.value = ? \r\n" + 
					"and p.object_id = status.object_id(+)\r\n" + 
					"and status.attr_id(+) = 9142823156013495257";
		}
			
	}
	
	
	
	
}
